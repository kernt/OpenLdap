#}dlz, schema, config
dn: cn=dlz,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: dlz
olcAttributeTypes: {0}( 1.3.6.1.4.1.18420.1.1.10       NAME 'dlzZoneName'     
   DESC 'DNS zone name - domain name not including host name'       SUP name  
       SINGLE-VALUE )
olcAttributeTypes: {1}( 1.3.6.1.4.1.18420.1.1.20 NAME 'dlzHostName'       DESC
  'Host portion of a domain name' SUP name       SINGLE-VALUE )
olcAttributeTypes: {2}( 1.3.6.1.4.1.18420.1.1.30       NAME 'dlzData'       DE
 SC 'Data for the resource record'       SUP name       SINGLE-VALUE )
olcAttributeTypes: {3}( 1.3.6.1.4.1.18420.1.1.40 NAME 'dlzType'       DESC 'DN
 S record type - A, SOA, NS, MX, etc...'       SUP name       SINGLE-VALUE )
olcAttributeTypes: {4}( 1.3.6.1.4.1.18420.1.1.50 NAME 'dlzSerial'       DESC '
 SOA record serial number'       EQUALITY integerMatch       SYNTAX 1.3.6.1.4.
 1.1466.115.121.1.27       SINGLE-VALUE )
olcAttributeTypes: {5}( 1.3.6.1.4.1.18420.1.1.60 NAME 'dlzRefresh'       DESC 
 'SOA record refresh time in seconds'       EQUALITY integerMatch         SYNT
 AX 1.3.6.1.4.1.1466.115.121.1.27       SINGLE-VALUE )
olcAttributeTypes: {6}( 1.3.6.1.4.1.18420.1.1.70 NAME 'dlzRetry'       DESC 'S
 OA retry time in seconds'       EQUALITY integerMatch         SYNTAX 1.3.6.1.
 4.1.1466.115.121.1.27       SINGLE-VALUE )
olcAttributeTypes: {7}( 1.3.6.1.4.1.18420.1.1.80 NAME 'dlzExpire'       DESC '
 SOA expire time in seconds'       EQUALITY integerMatch         SYNTAX 1.3.6.
 1.4.1.1466.115.121.1.27       SINGLE-VALUE )
olcAttributeTypes: {8}( 1.3.6.1.4.1.18420.1.1.90 NAME 'dlzMinimum'       DESC 
 'SOA minimum time in seconds'       EQUALITY integerMatch         SYNTAX 1.3.
 6.1.4.1.1466.115.121.1.27       SINGLE-VALUE )
olcAttributeTypes: {9}( 1.3.6.1.4.1.18420.1.1.100       NAME 'dlzAdminEmail'  
      DESC 'E-mail address of person responsible for this zone - @ should be r
 eplaced with . (period)' SUP name       SINGLE-VALUE )
olcAttributeTypes: {10}( 1.3.6.1.4.1.18420.1.1.110 NAME 'dlzPrimaryNS'       D
 ESC 'Primary name server for this zone - should be host name not IP address' 
 SUP name       SINGLE-VALUE )
olcAttributeTypes: {11}( 1.3.6.1.4.1.18420.1.1.120 NAME 'dlzIPAddr'       DESC
  'IP address - IPV4 should be in dot notation xxx.xxx.xxx.xxx IPV6 should be 
 in colon notation xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx' EQUALITY caseExact
 IA5Match  SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{40} SINGLE-VALUE )
olcAttributeTypes: {12}( 1.3.6.1.4.1.18420.1.1.130 NAME 'dlzCName'       DESC 
 'DNS cname' SUP name       SINGLE-VALUE )
olcAttributeTypes: {13}( 1.3.6.1.4.1.18420.1.1.140 NAME 'dlzPreference'       
 DESC 'DNS MX record preference.  Lower numbers have higher preference'       
 EQUALITY integerMatch         SYNTAX 1.3.6.1.4.1.1466.115.121.1.27       SING
 LE-VALUE )
olcAttributeTypes: {14}( 1.3.6.1.4.1.18420.1.1.150 NAME 'dlzTTL'       DESC 'D
 NS time to live - how long this record can be cached by caching DNS servers' 
       EQUALITY integerMatch         SYNTAX 1.3.6.1.4.1.1466.115.121.1.27     
   SINGLE-VALUE )
olcAttributeTypes: {15}( 1.3.6.1.4.1.18420.1.1.160 NAME 'dlzRecordID' DESC 'Un
 ique ID for each DLZ resource record' SUP name SINGLE-VALUE )
olcObjectClasses: {0}( 1.3.6.1.4.1.18420.1.2.10 NAME 'dlzZone'                
 DESC 'Zone name portion of a domain name'       SUP top STRUCTURAL MUST ( obj
 ectclass $ dlzZoneName ) )
olcObjectClasses: {1}( 1.3.6.1.4.1.18420.1.2.20 NAME 'dlzHost'        DESC 'Ho
 st name portion of a domain name'       SUP top STRUCTURAL MUST ( objectclass
  $ dlzHostName ) )
olcObjectClasses: {2}( 1.3.6.1.4.1.18420.1.2.30 NAME 'dlzAbstractRecord'      
   DESC 'Data common to all DNS record types'       SUP top ABSTRACT MUST ( ob
 jectclass $ dlzRecordID $ dlzHostName $ dlzType $ dlzTTL ) )
olcObjectClasses: {3}( 1.3.6.1.4.1.18420.1.2.40 NAME 'dlzGenericRecord'       
  DESC 'Generic DNS record - useful when a specific object class has not been 
 defined for a DNS record'       SUP dlzAbstractRecord STRUCTURAL MUST ( dlzDa
 ta ) )
olcObjectClasses: {4}( 1.3.6.1.4.1.18420.1.2.50       NAME 'dlzARecord'       
 DESC 'DNS A record'       SUP dlzAbstractrecord STRUCTURAL       MUST ( dlzIP
 Addr ) )
olcObjectClasses: {5}( 1.3.6.1.4.1.18420.1.2.60       NAME 'dlzNSRecord'      
  DESC 'DNS NS record'       SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {6}( 1.3.6.1.4.1.18420.1.2.70       NAME 'dlzMXRecord'      
  DESC 'DNS MX record'       SUP dlzGenericRecord STRUCTURAL       MUST ( dlzP
 reference ) )
olcObjectClasses: {7}( 1.3.6.1.4.1.18420.1.2.80       NAME 'dlzSOARecord'     
   DESC 'DNS SOA record'       SUP dlzAbstractRecord STRUCTURAL              M
 UST ( dlzSerial $ dlzRefresh $ dlzRetry              $ dlzExpire $ dlzMinimum
  $ dlzAdminEmail $ dlzPrimaryNS ) )
olcObjectClasses: {8}( 1.3.6.1.4.1.18420.1.2.90 NAME 'dlzTextRecord'        DE
 SC 'Text data with spaces should be wrapped in double quotes'       SUP dlzGe
 nericRecord STRUCTURAL )
olcObjectClasses: {9}( 1.3.6.1.4.1.18420.1.2.100       NAME 'dlzPTRRecord'    
    DESC 'DNS PTR record'       SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {10}( 1.3.6.1.4.1.18420.1.2.110       NAME 'dlzCNameRecord' 
       DESC 'DNS CName record'       SUP dlzGenericRecord STRUCTURAL )
olcObjectClasses: {11}( 1.3.6.1.4.1.18420.1.2.120       NAME 'dlzXFR'       DE
 SC 'Host allowed to perform zone transfer'       SUP top STRUCTURAL       MUS
 T ( objectclass $ dlzRecordID $ dlzIPAddr ) )

